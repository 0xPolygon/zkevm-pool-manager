// Code generated by mockery v2.39.0. DO NOT EDIT.

package server

import (
	types "github.com/0xPolygonHermez/zkevm-pool-manager/types"
	mock "github.com/stretchr/testify/mock"
)

// senderMock is an autogenerated mock type for the senderInterface type
type senderMock struct {
	mock.Mock
}

// SendL2Transaction provides a mock function with given fields: l2Tx
func (_m *senderMock) SendL2Transaction(l2Tx *types.L2Transaction) error {
	ret := _m.Called(l2Tx)

	if len(ret) == 0 {
		panic("no return value specified for SendL2Transaction")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*types.L2Transaction) error); ok {
		r0 = rf(l2Tx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// newSenderMock creates a new instance of senderMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newSenderMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *senderMock {
	mock := &senderMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
